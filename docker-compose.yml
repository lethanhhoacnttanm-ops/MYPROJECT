services:
  # Web service (Nginx)
  web_service:
    image: nginx:alpine
    container_name: myproject-web_service-1 # BỔ SUNG DÒNG NÀY
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - monitoring

  # Database service (MySQL)
  db_service:
    image: mysql:5.7
    container_name: myproject-db_service-1
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mydb
      MYSQL_USER: exporter
      MYSQL_PASSWORD: exporter_pass
    ports:
      - "3306:3306"
    networks:
      - monitoring

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus_config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus_config/alert.rules.yml:/etc/prometheus/alert.rules.yml
    ports:
      - "9090:9090"
    depends_on:
      - cadvisor
      - node_exporter
      - db_exporter
      - nginx_exporter
    networks:
      - monitoring

  # Alertmanager
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager # Hoặc myproject-alertmanager-1
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    volumes:
      - ./alertmanager_config/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9093:9093"
    networks:
      - monitoring

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana   
    networks:
      - monitoring
    restart: always   

  # Node Exporter (host metrics)
  node_exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    networks:
      - monitoring

  # cAdvisor (container metrics)
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "8081:8080"
    networks:
      - monitoring
    volumes:
      - /:/rootfs:ro           # Truy cập Host OS
      - /var/run:/var/run:rw   # Truy cập runtime state (quan trọng)
      - /sys:/sys:ro           # Truy cập thông tin hệ thống
      - /var/lib/docker/:/var/lib/docker:ro  # Truy cập Docker state (quan trọng)
      - /dev/disk/:/dev/disk:ro 
    # Thêm restart: always để đảm bảo nó luôn chạy
    restart: always 
    # Thêm privilleged để đảm bảo nó có quyền truy cập sâu
    privileged: true

  # MySQL Exporter    
  db_exporter:
    image: prom/mysqld-exporter:v0.17.2
    container_name: myproject-db_exporter-1
    command:
      - --config.my-cnf=/etc/mysql/.my.cnf
      - --no-collect.slave_status
    volumes:
      - ./exporter.cnf:/etc/mysql/.my.cnf:ro
    ports:
      - "9104:9104"
    depends_on:
      - db_service
    restart: unless-stopped
    networks:
      - monitoring

  # Nginx Exporter
  nginx_exporter:
    image: nginx/nginx-prometheus-exporter:latest
    command:
      - '-nginx.scrape-uri=http://web_service/stub_status'
    ports:
      - "9113:9113"
    depends_on:
      - web_service
    networks:
      - monitoring

  # Thêm dịch vụ Webhook
  webhook:
    build: . # Sẽ sử dụng Dockerfile của bạn
    container_name: webhook
    command: python webhook_server.py # Lệnh chạy file Python
    volumes:
      # [BẮT BUỘC] Mount Docker Socket để Webhook Server có thể chạy lệnh "docker start" trên Host
      - /var/run/docker.sock:/var/run/docker.sock 
      # Mount các file cần thiết
      - ./webhook_server.py:/app/webhook_server.py
      - ./recovery.sh:/app/recovery.sh
      # BỔ SUNG DÒNG NÀY: Mount script cleanup_host.sh
      - ./cleanup_host.sh:/app/cleanup_host.sh 
    ports:
      - "5001:5001"
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge
    
volumes:
  grafana-data:
  prometheus-data:
